 package com.thelast.pds.episen.notificationmanagerservice.bill.producer;

import com.thelast.pds.episen.notificationmanagerservice.bill.model.CustomerBill;
import com.thelast.pds.episen.notificationmanagerservice.configuration.NotificationConfiguration;
import org.slf4j.Logger; 
import org.slf4j.LoggerFactory;
import org.springframework.amqp.core.AmqpAdmin;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.rabbit.connection.CachingConnectionFactory;
import org.springframework.amqp.rabbit.core.RabbitAdmin;
import org.springframework.amqp.rabbit.core.RabbitTemplate; 
import org.springframework.beans.factory.annotation.Autowired; 
import org.springframework.web.bind.annotation.*;

  @RestController
  //@RequestMapping()
  public class NotificationBill {

  private static final Logger log = LoggerFactory.getLogger(NotificationBill.class);
      String billQueue;
      @Autowired
      private RabbitTemplate template;

      public NotificationBill() {
          this.billQueue = NotificationConfiguration.BILLS_QUEUE;
          CachingConnectionFactory connectionFactory = new CachingConnectionFactory();
          AmqpAdmin admin = new RabbitAdmin(connectionFactory);
          admin.declareQueue(new Queue(billQueue));
          template = new RabbitTemplate(connectionFactory);
      }

//      @PostMapping("/publish/bill")
//      public String publishBill(@RequestBody CustomerBill bill) {
//     	  bill.getUsername();
//    	  bill.getLink();
//          template.convertAndSend(NotificationConfiguration.EXCHANGE, NotificationConfiguration.BILLS_ROUTING_KEY, bill);
//          
//          return "Bill Published for user "+ bill.getUsername() + " and available through "+ bill.getLink();
//
//      }
 }
